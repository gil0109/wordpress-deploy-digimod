apiVersion: v1
kind: Secret
metadata:
  annotations:
    description: wordpress secrets
  labels:
    app: {{ .Values.app_name }}
    env: {{ .Values.env_name }}
    name: {{ .Values.app_name }}-{{ .Values.wordpress_role_name }}-secrets-{{ .Values.site_name }}
    site: {{ .Values.site_name }}
  name: {{ .Values.app_name }}-{{ .Values.wordpress_role_name }}-secrets-{{ .Values.site_name }}
  namespace: {{ .Values.project_namespace }}-{{ .Values.env_name }}
# stringData:
#   WORDPRESS_AUTH_KEY: {{ .Values.wordpress_auth_key }}
#   WORDPRESS_AUTH_SALT: {{ .Values.wordpress_auth_salt }}
#   WORDPRESS_LOGGED_IN_KEY: {{ .Values.wordpress_logged_in_key }}
#   WORDPRESS_LOGGED_IN_SALT: {{ .Values.wordpress_logged_in_salt }}
#   WORDPRESS_NONCE_KEY: {{ .Values.wordpress_nonce_key }}
#   WORDPRESS_NONCE_SALT: {{ .Values.wordpress_nonce_salt }}
#   WORDPRESS_SECURE_AUTH_KEY: {{ .Values.wordpress_secure_auth_key }}
#   WORDPRESS_SECURE_AUTH_SALT: {{ .Values.wordpress_secure_auth_salt }}
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "WORDPRESS_AUTH_KEY") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "WORDPRESS_AUTH_KEY") | default (randAlphaNum 32 | b64enc) }}
  WORDPRESS_AUTH_KEY: {{ $jwtSecret | quote }}

  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "WORDPRESS_AUTH_SALT") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "WORDPRESS_AUTH_SALT") | default (randAlphaNum 32 | b64enc) }}
  WORDPRESS_AUTH_SALT: {{ $jwtSecret | quote }}

  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "WORDPRESS_LOGGED_IN_KEY") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "WORDPRESS_LOGGED_IN_KEY") | default (randAlphaNum 32 | b64enc) }}
  WORDPRESS_LOGGED_IN_KEY: {{ $jwtSecret | quote }}

    # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "WORDPRESS_LOGGED_IN_SALT") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "WORDPRESS_LOGGED_IN_SALT") | default (randAlphaNum 32 | b64enc) }}
  WORDPRESS_LOGGED_IN_SALT: {{ $jwtSecret | quote }}

    # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "WORDPRESS_NONCE_KEY") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "WORDPRESS_NONCE_KEY") | default (randAlphaNum 32 | b64enc) }}
  WORDPRESS_NONCE_KEY: {{ $jwtSecret | quote }}

    # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "WORDPRESS_NONCE_SALT") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "WORDPRESS_NONCE_SALT") | default (randAlphaNum 32 | b64enc) }}
  WORDPRESS_NONCE_SALT: {{ $jwtSecret | quote }}

    # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "WORDPRESS_SECURE_AUTH_KEY") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "WORDPRESS_SECURE_AUTH_KEY") | default (randAlphaNum 32 | b64enc) }}
  WORDPRESS_SECURE_AUTH_KEY: {{ $jwtSecret | quote }}

    # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "WORDPRESS_SECURE_AUTH_SALT") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "WORDPRESS_SECURE_AUTH_SALT") | default (randAlphaNum 32 | b64enc) }}
  WORDPRESS_SECURE_AUTH_SALT: {{ $jwtSecret | quote }}