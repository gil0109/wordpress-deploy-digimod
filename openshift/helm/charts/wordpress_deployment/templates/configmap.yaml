apiVersion: v1
data:
  MYSQL_DATABASE: {{ .Values.site_name }}_{{ .Values.env_name }}
  MYSQL_USER: {{ .Values.site_name }}_user
  WORDPRESS_AUTH_KEY_FILE: /run/secrets/wordpress/WORDPRESS_AUTH_KEY
  WORDPRESS_AUTH_SALT_FILE: /run/secrets/wordpress/WORDPRESS_AUTH_SALT
  WORDPRESS_CONFIG_EXTRA: |-
    /* Multisite */
    define( 'WP_ALLOW_MULTISITE', true );
    define( 'MULTISITE', !!filter_var( getenv_docker( 'WORDPRESS_MULTISITE', '0' ), FILTER_VALIDATE_BOOLEAN ) );
    define( 'SUBDOMAIN_INSTALL', false );
    define( 'DOMAIN_CURRENT_SITE', '{{ .Values.app_domain }}' );
    define( 'PATH_CURRENT_SITE', '/' );
    define( 'SITE_ID_CURRENT_SITE', intval( getenv_docker( 'WORDPRESS_SITE_ID_CURRENT_SITE', '1' ) ) );
    define( 'BLOG_ID_CURRENT_SITE', intval( getenv_docker( 'WORDPRESS_SITE_ID_CURRENT_SITE', '1' ) ) );
    /* For Active Directory Integration on Multisite. */
    define( 'IS_WPMU', true );
    /* Other configs */
    define( 'WP_DEBUG_LOG', false );
  WORDPRESS_DB_HOST: {{ .Values.app_name }}-mariadb--{{ .Values.site_name }}
  WORDPRESS_DB_PASSWORD_FILE: /run/secrets/WORDPRESS_DB_PASSWORD
  WORDPRESS_LOGGED_IN_KEY_FILE: /run/secrets/wordpress/WORDPRESS_LOGGED_IN_KEY
  WORDPRESS_LOGGED_IN_SALT_FILE: /run/secrets/wordpress/WORDPRESS_LOGGED_IN_SALT
  WORDPRESS_NONCE_KEY_FILE: /run/secrets/wordpress/WORDPRESS_NONCE_KEY
  WORDPRESS_NONCE_SALT_FILE: /run/secrets/wordpress/WORDPRESS_NONCE_SALT
  WORDPRESS_SECURE_AUTH_KEY_FILE: /run/secrets/wordpress/WORDPRESS_SECURE_AUTH_KEY
  WORDPRESS_SECURE_AUTH_SALT_FILE: /run/secrets/wordpress/WORDPRESS_SECURE_AUTH_SALT
  app.ini: |-
    upload_max_filesize=${MAX_FILE_SIZE}
    post_max_size=${MAX_FILE_SIZE}
    memory_limit=256M
    max_execution_time=300
    max_input_time=300
  backup.conf: mariadb={{ .Values.app_name }}-mariadb--{{ .Values.site_name }}:3306/{{ .Values.site_name }}_{{ .Values.env_name }}
  default.conf: "server {\n  index index.php index.html;\n  server_name localhost;\n
    \ #listen 8443 ssl;\n  listen 8080;\n  error_log  /dev/stderr;\n  access_log /dev/stdout;\n
    \ root /var/www/html/;\n  # Sets Nginx max file upload size;\n  client_max_body_size
    1000M;\n  location ~ /\\. {\n      return 404;\n      deny all;\n  }\n  location
    / {\n      try_files $uri $uri/ /index.php?$args; \n  }\n  # Required for multi-site
    wp-admin.\n  if (!-e $request_filename) {\n      rewrite /wp-admin$ $scheme://$host$uri/
    permanent;  \n      rewrite ^(/[^/]+)?(/wp-.*) $2 last;                     \n
    \     rewrite ^(/[^/]+)?(/.*.php) $2 last;                   \n  }\n  location
    /nginx_status {\n      stub_status on;\n      access_log off;\n      log_not_found
    off;\n      allow 127.0.0.1;\n      deny all;\n  }\n  location ~ \\.php$ {\n      try_files
    $uri =404;\n      fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n      fastcgi_pass
    127.0.0.1:9000;\n      fastcgi_index index.php;\n      include fastcgi_params;\n
    \     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n      fastcgi_param
    PATH_INFO $fastcgi_path_info;\n      fastcgi_param SERVER_NAME $server_name; \n
    \ }\n}"
  my.cnf: |-
    [mariadb]
    innodb_buffer_pool_size = 10M
    innodb_log_buffer_size = 512K # default / 2
    innodb_log_file_size = 8M
    lower_case_table_names = 1
    key_buffer_size = 4194304 # default / 2
  nginx.conf: '# Extra ngix configs.'
kind: ConfigMap
metadata:
  annotations:
    description: WordPress configurations
  labels:
    app: {{ .Values.app_name }}
    env: {{ .Values.env_name }}
    name: {{ .Values.app_name }}-{{ .Values.config_role_name }}-env-config--{{ .Values.site_name }}
    site: {{ .Values.site_name }}
  name: {{ .Values.app_name }}-{{ .Values.config_role_name }}--{{ .Values.site_name }}
  namespace: {{ .Values.project_namespace }}-{{ .Values.env_name }}
